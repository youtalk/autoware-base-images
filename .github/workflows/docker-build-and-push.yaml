name: docker-build-and-push

on:
  push:
    branches:
      - main
    tags:
  workflow_dispatch:

jobs:
  load-env:
    uses: ./.github/workflows/load-env.yaml

  docker-build-and-push:
    needs: load-env
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - no-cuda
          - cuda
        include:
          - name: no-cuda
            platform: amd64
            base_image_env: base_image
            lib_dir: x86_64
            setup-args: --no-nvidia
            additional-tag-suffix: ""
          - name: cuda
            platform: amd64
            base_image_env: base_image
            lib_dir: x86_64
            additional-tag-suffix: -cuda
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set git config
        uses: autowarefoundation/autoware-github-actions/set-git-config@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            *.env
            *.repos
            .github/actions/docker-build-and-push/action.yaml
            .github/workflows/docker-build-and-push*.yaml
            ansible-galaxy-requirements.yaml
            ansible/**
            docker/**

      - name: Build 'Autoware'
        if: ${{ steps.changed-files.outputs.any_changed == 'true' ||
          github.event_name == 'workflow_dispatch' ||
          (github.event_name == 'push' && github.ref_type == 'tag') }}
        uses: ./.github/actions/docker-build-and-push
        with:
          name: ${{ matrix.name }}
          platform: ${{ matrix.platform }}
          bake-target: autoware
          build-args: |
            *.platform=linux/${{ matrix.platform }}
            *.args.ROS_DISTRO=${{ needs.load-env.outputs.rosdistro }}
            *.args.BASE_IMAGE=${{ needs.load-env.outputs[format('{0}', matrix.base_image_env)] }}
            *.args.SETUP_ARGS=${{ matrix.setup-args }}
            *.args.LIB_DIR=${{ matrix.lib_dir }}
            *.cache-from=type=registry,ref=ghcr.io/${{ github.repository }}-buildcache:${{ matrix.name }}-${{ matrix.platform }}-${{ github.ref_name }}
            *.cache-from=type=registry,ref=ghcr.io/${{ github.repository }}-buildcache:${{ matrix.name }}-${{ matrix.platform }}-main
            *.cache-to=type=registry,ref=ghcr.io/${{ github.repository }}-buildcache:${{ matrix.name }}-${{ matrix.platform }}-${{ github.ref_name }},mode=max
          tag-suffix: ${{ matrix.additional-tag-suffix }}-${{ matrix.platform }}
          tag-prefix: ${{ needs.load-env.outputs.rosdistro }}

      - name: Show disk space
        run: |
          df -h
